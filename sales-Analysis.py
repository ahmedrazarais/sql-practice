# Suppose you have a database table named sales with the following columns:

# sale_id (unique identifier for each sale, integer)
# product_id (identifier for the product sold, integer)
# sale_date (date when the sale occurred, date)
# quantity (quantity of the product sold, integer)
# unit_price (price per unit of the product sold, float)
# Write a SQL query to find the total sales revenue generated by each product, sorted in descending order of total revenue. Your query should return the following columns:

# product_id (identifier for the product)
# total_revenue (total revenue generated by the product)





# firt import sql connector abd password username from config.py file
import mysql.connector
from config import DB_HOST, DB_USER, DB_PASSWORD

# making a class
class Analysis:
    def __init__(self):
        try:
            # MAKING A CONNECTION WITH MYSQL
            self.connection=mysql.connector.connect(
                host=DB_HOST,
                user=DB_USER,
                password=DB_PASSWORD
               
            )
            # MAKE A POINTER FOR EXECUTING QUERY
            self.cursor=self.connection.cursor()
            
            

            print("Connection created successfull")
        # IF CONNECTION NOT MADE SUCCESSFULLY
        except mysql.connector.Error as e:
            print(f"Error in connection {e}")
    
    
    # WRITTING QUERY
    def write_query(self):
        # FOR GETTING AVERAGE SALARAY  
        try: # Write a SQL query to find the total sales revenue generated by each product, sorted in descending order of total revenue. Your query should return the following columns:
            query="""SELECT product_id,
                     SUM(quantity * unit_price) AS payment
                      FROM sales
                       GROUP BY product_id
                        ORDER BY payment DESC """
            self.cursor.execute(query)
            data=self.cursor.fetchall()
            for row in data:
                 product_id, total_revenue = row
                 print(f"Product ID: {product_id}, Total Revenue: {total_revenue}")

            pass
        except mysql.connector.Error as e:
            print(f"Error executing query: {e}")



    def close_connection(self):
        # Close database connection
        try:
            if self.connection.is_connected():
                self.cursor.close()
                self.connection.close()
                print("Connection to MySQL database closed.")
        except mysql.connector.Error as e:
            print(f"Error closing connection: {e}")


analysis = Analysis()
# analysis.write_query()
analysis.close_connection()